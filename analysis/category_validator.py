#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä—ã–Ω–∫–æ–≤
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ä—ã–Ω–æ–∫ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –ö—Ä–∏–ø—Ç–æ –∏–ª–∏ –°–ø–æ—Ä—Ç
"""

import logging
from playwright.sync_api import sync_playwright

logger = logging.getLogger(__name__)

class CategoryValidator:
    def __init__(self):
        self.playwright = None
        self.browser = None
        self.page = None
    
    def init_browser(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞"""
        try:
            self.playwright = sync_playwright().start()
            self.browser = self.playwright.chromium.launch(
                headless=True,
                args=[
                    '--no-sandbox',
                    '--disable-setuid-sandbox',
                    '--disable-dev-shm-usage',
                    '--disable-accelerated-2d-canvas',
                    '--no-first-run',
                    '--no-zygote',
                    '--disable-gpu'
                ]
            )
            self.page = self.browser.new_page()
            self.page.set_viewport_size({"width": 1920, "height": 1080})
            logger.info("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
            return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
            return False
    
    def goto_page(self, url):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
        try:
            logger.info(f"üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: {url}")
            self.page.goto(url, wait_until='domcontentloaded', timeout=30000)
            logger.info("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
            return False
    
    def check_category_color(self, category_name):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–≤–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        try:
            # –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            category_selectors = [
                f'text={category_name}',
                f'[data-testid="{category_name.lower()}"]',
                f'[class*="{category_name.lower()}"]',
                f'a:has-text("{category_name}")',
                f'button:has-text("{category_name}")'
            ]
            
            for selector in category_selectors:
                try:
                    element = self.page.query_selector(selector)
                    if element:
                        # –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞
                        color = element.evaluate("""
                            (element) => {
                                const style = window.getComputedStyle(element);
                                return style.color;
                            }
                        """)
                        
                        logger.info(f"üé® –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category_name}' –∏–º–µ–µ—Ç —Ü–≤–µ—Ç: {color}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ü–≤–µ—Ç —á–µ—Ä–Ω—ã–º –∏–ª–∏ –±–ª–∏–∑–∫–∏–º –∫ —á–µ—Ä–Ω–æ–º—É
                        if color and ('rgb(0, 0, 0)' in color or 'black' in color or '#000' in color):
                            logger.info(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category_name}' –∞–∫—Ç–∏–≤–Ω–∞ (—á–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç)")
                            return True
                        else:
                            logger.info(f"‚ÑπÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category_name}' –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ (—Å–µ—Ä—ã–π —Ü–≤–µ—Ç)")
                            return False
                            
                except Exception as e:
                    logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–ª–µ–∫—Ç–æ—Ä {selector}: {e}")
                    continue
            
            logger.warning(f"‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–≤–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category_name}': {e}")
            return False
    
    def validate_market_category(self, slug):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä—ã–Ω–∫–∞"""
        try:
            logger.info(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä—ã–Ω–∫–∞: {slug}")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±—Ä–∞—É–∑–µ—Ä
            if not self.init_browser():
                return {'is_valid': True, 'status': '–≤ —Ä–∞–±–æ—Ç–µ', 'reason': '–±—Ä–∞—É–∑–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω'}
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            url = f"https://polymarket.com/event/{slug}"
            if not self.goto_page(url):
                return {'is_valid': True, 'status': '–≤ —Ä–∞–±–æ—Ç–µ', 'reason': '—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞'}
            
            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            self.page.wait_for_timeout(3000)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ö—Ä–∏–ø—Ç–æ
            is_crypto = self.check_category_color("Crypto")
            if is_crypto:
                logger.warning(f"‚ö†Ô∏è –†—ã–Ω–æ–∫ {slug} –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ö—Ä–∏–ø—Ç–æ")
                return {'is_valid': False, 'status': '–∑–∞–∫—Ä—ã—Ç (–ö—Ä–∏–ø—Ç–æ)', 'reason': '–∫–∞—Ç–µ–≥–æ—Ä–∏—è –ö—Ä–∏–ø—Ç–æ'}
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –°–ø–æ—Ä—Ç
            is_sports = self.check_category_color("Sports")
            if is_sports:
                logger.warning(f"‚ö†Ô∏è –†—ã–Ω–æ–∫ {slug} –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –°–ø–æ—Ä—Ç")
                return {'is_valid': False, 'status': '–∑–∞–∫—Ä—ã—Ç (–°–ø–æ—Ä—Ç)', 'reason': '–∫–∞—Ç–µ–≥–æ—Ä–∏—è –°–ø–æ—Ä—Ç'}
            
            # –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, —Ä—ã–Ω–æ–∫ –≤–∞–ª–∏–¥–µ–Ω
            logger.info(f"‚úÖ –†—ã–Ω–æ–∫ {slug} –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
            return {'is_valid': True, 'status': '–≤ —Ä–∞–±–æ—Ç–µ', 'reason': '–≤–∞–ª–∏–¥–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è'}
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä—ã–Ω–∫–∞ {slug}: {e}")
            return {'is_valid': True, 'status': '–≤ —Ä–∞–±–æ—Ç–µ', 'reason': f'–æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}'}
        finally:
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
            self.close_browser()
    
    def close_browser(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞"""
        try:
            if self.browser:
                self.browser.close()
            if self.playwright:
                self.playwright.stop()
            logger.info("üîí –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞: {e}") 