import logging
import re
from analysis.yes_percentage_extractor import YesPercentageExtractor
from analysis.volume_extractor import VolumeExtractor
from analysis.contract_extractor import ContractExtractor
from analysis.market_name_extractor import MarketNameExtractor

logger = logging.getLogger(__name__)

class DataExtractor:
    def __init__(self):
        self.yes_extractor = YesPercentageExtractor()
        self.volume_extractor = VolumeExtractor()
        self.contract_extractor = ContractExtractor()
        self.name_extractor = MarketNameExtractor()
    
    async def extract_market_data(self, page):
        """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä—ã–Ω–∫–∞"""
        try:
            logger.info("üîç –ù–∞—á–∏–Ω–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä—ã–Ω–∫–∞...")
            data = {
                'market_exists': True,
                'is_boolean': True,
                'yes_percentage': 0,
                'volume': 'New',
                'contract_address': '',
                'status': '–≤ —Ä–∞–±–æ—Ç–µ',
                'market_name': 'Unknown Market'
            }
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞
            market_name = await self.name_extractor.extract_market_name(page)
            if market_name:
                data['market_name'] = market_name
                logger.info(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞: {market_name}")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç Yes
            yes_percentage = await self.yes_extractor.extract_yes_percentage(page)
            if yes_percentage is not None:
                data['yes_percentage'] = yes_percentage
                logger.info(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω –ø—Ä–æ—Ü–µ–Ω—Ç Yes: {yes_percentage}%")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±—ä–µ–º
            volume = await self.volume_extractor.extract_volume(page)
            if volume is not None:
                data['volume'] = volume
                logger.info(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω –æ–±—ä–µ–º: {volume}")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
            contract = await self.contract_extractor.extract_contract(page)
            if contract is not None:
                data['contract_address'] = contract
                logger.info(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: {contract}")
            
            logger.info("‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä—ã–Ω–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
            return data
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä—ã–Ω–∫–∞: {e}")
            return None 